CREATE DATABASE smart_fan_system;

USE smart_fan_system;

CREATE TABLE fan_status (
    id INT AUTO_INCREMENT PRIMARY KEY,
    temperature DECIMAL(5,2),
    distance DECIMAL(5,2),
    fan_status VARCHAR(10),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE fan_status (
    id INT AUTO_INCREMENT PRIMARY KEY,
    temperature DECIMAL(5,2),
    distance DECIMAL(5,2),
    fan_status VARCHAR(10),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



is this a good backend server program for this project?:

//fan status:

package com.example.smartfansystem;

import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import java.sql.Timestamp;

@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
public class FanStatus {

    private double temperature;
    private double distanceCm;
    private double distanceInch;
    private double current;
    private double electricUsageKWh;

    // Getters and setters
    public double getTemperature() {
        return temperature;
    }

    public void setTemperature(double temperature) {
        this.temperature = temperature;
    }

    public double getDistanceCm() {
        return distanceCm;
    }

    public void setDistanceCm(double distanceCm) {
        this.distanceCm = distanceCm;
    }

    public double getDistanceInch() {
        return distanceInch;
    }

    public void setDistanceInch(double distanceInch) {
        this.distanceInch = distanceInch;
    }

    public double getCurrent() {
        return current;
    }

    public void setCurrent(double current) {
        this.current = current;
    }

    public double getElectricUsageKWh() {
        return electricUsageKWh;
    }

    public void setElectricUsageKWh(double electricUsageKWh) {
        this.electricUsageKWh = electricUsageKWh;
    }
}

//fan status controller:

package com.example.smartfansystem;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping("/api")
public class FanStatusController {

    private final FanStatus fanStatus = new FanStatus();

    @GetMapping("/fan-status")
    public FanStatus getFanStatus() {
        // Assume we get the latest data from Arduino (this can be fetched from serial or other source)
        return fanStatus;
    }

    @PostMapping("/update-fan-status")
    public void updateFanStatus(@RequestBody FanStatus newStatus) {
        // Update the fan status with the data received from Arduino
        fanStatus.setTemperature(newStatus.getTemperature());
        fanStatus.setDistanceCm(newStatus.getDistanceCm());
        fanStatus.setDistanceInch(newStatus.getDistanceInch());
        fanStatus.setCurrent(newStatus.getCurrent());
        fanStatus.setElectricUsageKWh(newStatus.getElectricUsageKWh());
    }
}

//fan status repository:
package com.example.smartfansystem;

import org.springframework.data.jpa.repository.JpaRepository;

public interface FanStatusRepository extends JpaRepository<FanStatus, Long> {}

//smart fan system application:

package com.example.smartfansystem;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class SmartfansystemApplication {

	public static void main(String[] args) {
		SpringApplication.run(SmartfansystemApplication.class, args);
	}

}



